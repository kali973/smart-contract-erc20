version: '3'
services:
  web:
    image: docker/getting-started
    ports:
      - "80:80"
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.1"
          memory: 50M
      restart_policy:
        condition: on-failure

  db:
    image: postgres
    environment:
      POSTGRES_PASSWORD: solarix
    ports:
      - "5432:5432"
    networks:
      - appnet
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.1"
          memory: 1g # Augmenter la mémoire allouée à 1 Go
      restart_policy:
        condition: on-failure

  ethereum:
    image: ethereum/client-go:v1.9.25
    command: [ "--rpc", "--rpcaddr", "0.0.0.0", "--rpcapi=db,eth,net,web3,personal", "--rpccorsdomain", "*", "--dev" ]
    ports:
      - "8545:8545"
      - "30303:30303"
    networks:
      - appnet
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.1"
          memory: 1g # Augmenter la mémoire allouée à 1 Go
      restart_policy:
        condition: on-failure

  sonarqube:
    image: bitnami/sonarqube
    ports:
      - "9000:9000"
    environment:
      - SONARQUBE_DATABASE_PASSWORD=solarix
      - SONARQUBE_JDBC_URL=jdbc:postgresql://localhost:5432/sonarqube?user=postgres&password=solarix
    depends_on:
      - db
    networks:
      - appnet
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.1"
          memory: 1g # Augmenter la mémoire allouée à 1 Go
      restart_policy:
        condition: on-failure

  activemq:
    image: rmohr/activemq
    ports:
      - "61616:61616"
      - "8161:8161"
    networks:
      - appnet
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.1"
          memory: 1g # Augmenter la mémoire allouée à 1 Go
      restart_policy:
        condition: on-failure

networks:
  appnet:
